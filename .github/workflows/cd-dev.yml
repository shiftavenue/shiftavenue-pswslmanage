---
name: cd-dev
on:
  pull_request_target:
    types:
      - closed
    branches:    
      - dev

jobs:
  cd_dev:
    if: github.event.pull_request.merged == true
    name: cd-dev
    runs-on: [self-hosted]
    permissions:
      actions: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ./pswslmanage

      - name: Create manifest
        run: |
          $_repo_dir = "{0}\shiftavenue-pswslmanage\pswslmanage" -f $($env:RUNNER_WORKSPACE)
          Remove-Item -Path "$_repo_dir\pswslmanage.psd1" -Force
          New-ModuleManifest -Path "$_repo_dir\pswslmanage.psd1" `
                              -ModuleVersion "1.0.${{ vars.BUILD_NUMBER }}" `
                              -Author "David Koenig" `
                              -Guid "a2d16567-94f2-4a76-8e0d-c29d40177c56" `
                              -CompatiblePSEditions Core `
                              -PowerShellVersion 7.3 `
                              -CompanyName "shiftavenue" `
                              -Copyright "(c) shiftavenue. All rights reserved." `
                              -RootModule "pswslmanage.psm1" `
                              -Description "With this module you can install and maintain WSL images" `
                              -ProcessorArchitecture Amd64 `
                              -FunctionsToExport @("Add-WslImage", "Test-WslImage", "Get-WslImage", "Remove-WslImage", "Stop-WslImage", "Add-WslUser", "Add-WslRoleSSH" ) `
                              -Tags "wsl,windows,linux,wsl2" `
                              -ProjectUri "https://github.com/shiftavenue/shiftavenue-pswslmanage" `
                              -IconUri "https://raw.githubusercontent.com/shiftavenue/shiftavenue-pswslmanage/main/Icon.png" `
                              -Prerelease "dev${{ vars.BUILD_NUMBER }}"
        shell: pwsh

      - name: Publish testbuild
        run: |
          $_repo_name = "PSGallery"
          $_token = $($env:PUBLISH_TOKEN)
          $_module_name = "pswslmanage"
          $_repo_dir = "{0}\shiftavenue-pswslmanage\pswslmanage" -f $($env:RUNNER_WORKSPACE)

          echo "Install nuget"
          $_local_nuget_path = "{0}\Microsoft\Windows\PowerShell\PowerShellGet" -f $($env:LOCALAPPDATA)
          if (-Not (Test-Path -Path $_local_nuget_path)) {New-Item -Path $_local_nuget_path -ItemType Directory -Force}
          $ProgressPreference = 'SilentlyContinue'
          Invoke-WebRequest -Uri "https://aka.ms/psget-nugetexe" -OutFile "$_local_nuget_path\nuget.exe"

          echo "Delete unwanted files from the local repo dir"
          if (Test-Path -Path $_repo_dir\.github) { Remove-Item "$_repo_dir\.github" -Recurse -Force }
          if (Test-Path -Path $_repo_dir\docs) { Remove-Item "$_repo_dir\docs" -Recurse -Force }
          if (Test-Path -Path $_repo_dir\.gitattributes) { Remove-Item "$_repo_dir\.gitattributes" -Force }
          if (Test-Path -Path $_repo_dir\.gitignore) { Remove-Item "$_repo_dir\.gitignore" -Force }
          if (Test-Path -Path $_repo_dir\CODEOWNERS) { Remove-Item "$_repo_dir\CODEOWNERS" -Force }
          if (Test-Path -Path $_repo_dir\PULL_REQUEST_TEMPLATE.md) { Remove-Item "$_repo_dir\PULL_REQUEST_TEMPLATE.md" -Force }
          if (Test-Path -Path $_repo_dir\README.md) { Remove-Item "$_repo_dir\README.md" -Force }
          if (Test-Path -Path $_repo_dir\pswslmanage.tests.ps1) { Remove-Item "$_repo_dir\pswslmanage.tests.ps1" -Force }
          if (Test-Path -Path $_repo_dir\pswslmanage-start.ps1) { Remove-Item "$_repo_dir\pswslmanage-start.ps1" -Force }

          echo "Publish the package"
          Publish-Module -Path "$_repo_dir" -Repository "$_repo_name" -NuGetApiKey "$_token" -Verbose
        env:
          PUBLISH_TOKEN: ${{secrets.PSGALLERY_API_KEY}}
        shell: pwsh