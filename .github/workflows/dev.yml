---
name: sa-pswslmanage-dev
on: push
  # pull_request:
  #   branches:
  #     - dev

jobs:
  sa-pswslmanage-dev:
    name: sa-pswslmanage-dev
    runs-on: [self-hosted]
    permissions:
      actions: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ./pswslmanage

      - name: Execute PSScriptAnalyzer
        run: |
          $_repo_dir = "{0}\shiftavenue-pswslmanage\pswslmanage" -f $($env:RUNNER_WORKSPACE)
          $_issue_list=$null
          $_issue_list=@()
          echo "Working directory for script analyzer: $_repo_dir"
          foreach($_issue in $(Invoke-ScriptAnalyzer -Path "$_repo_dir\pswslmanage.psm1")) {Write-Output "Add issue"; $_issue_list += $_issue}
          foreach($_issue in $(Invoke-ScriptAnalyzer -Path "$_repo_dir\pswslmanage-roles.ps1")) {Write-Output "Add issue"; $_issue_list += $_issue}
          foreach($_issue in $(Invoke-ScriptAnalyzer -Path "$_repo_dir\pswslmanage-helper.ps1")) {Write-Output "Add issue"; $_issue_list += $_issue}
          if($_issue_list.Count -gt 0) {$_issue_list; Write-Error "Linter issues found. Exiting"}

      - name: Create manifest
        run: |
          $_repo_dir = "{0}\shiftavenue-pswslmanage\pswslmanage" -f $($env:RUNNER_WORKSPACE)
          Remove-Item -Path "$_repo_dir\pswslmanage.psd1" -Force
          New-ModuleManifest -Path "$_repo_dir\pswslmanage.psd1" `
                              -ModuleVersion "1.0.1" `
                              -Author "David Koenig" `
                              -Guid "a2d16567-94f2-4a76-8e0d-c29d40177c56" `
                              -CompatiblePSEditions Core `
                              -CompanyName "shiftavenue" `
                              -Copyright "(c) shiftavenue. All rights reserved." `
                              -RootModule "pswslmanage.psm1" `
                              -Description "With this module you can install and maintain WSL images" `
                              -ProcessorArchitecture Amd64 `
                              -FunctionsToExport @("Add-WslImage", "Test-WslImage", "Get-WslImage", "Remove-WslImage", "Stop-WslImage", "Add-WslUser", "Add-WslRoleSSH" ) `
                              -Tags "wsl, windows, linux, wsl2, windows subsystem for linux" `
                              -ProjectUri "https://github.com/shiftavenue/shiftavenue-pswslmanage" `
                              -IconUri "https://raw.githubusercontent.com/shiftavenue/shiftavenue-pswslmanage/main/Icon.png"

      - name: Publish
        run: |
          $_repo_name = "SAPSGallery"
          $_repo_owner = "shiftavenue"
          $_feed = "https://nuget.pkg.github.com/$_repo_owner/index.json"
          $_user = "github"
          $_token = "$($env:GH_TOKEN)" | ConvertTo-SecureString -AsPlainText -Force
          $_creds = New-Object System.Management.Automation.PSCredential -ArgumentList @($_user, $_token)
          $_module_name = "pswslmanage"
          $_repo_dir = "{0}\shiftavenue-pswslmanage\pswslmanage" -f $($env:RUNNER_WORKSPACE)

          echo "-----------------"
          echo "repo_name:   $_repo_name"
          echo "repo_owner:  $_repo_owner"
          echo "feeds:       $_feed"
          echo "user:        $_user"
          echo "module_name: $_module_name"
          echo "repo_dir:   $_repo_dir"
          echo "-----------------"

          echo "Activate TLS 1.2"
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          
          echo "Register repository"
          Register-PSRepository -Name $_repo_name -SourceLocation $_feed -PublishLocation $_feed -InstallationPolicy 'Trusted' -Credential $_creds
          
          echo "Publish the package"
          Publish-Module -Path "$_repo_dir" -Repository "SAPSGallery" -NuGetApiKey "$($env:GH_TOKEN)" -Verbose
        env:
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}