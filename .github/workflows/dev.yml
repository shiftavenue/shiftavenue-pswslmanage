---
name: pswslmanage
on: 
  push:
  # pull_request:
  #   branches:
  #     - dev

jobs:
  pwslmanage:
    name: pswslmanage
    runs-on: [self-hosted]
    permissions:
      actions: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Print all variables
        run: |
          dir env:

      - name: PSScriptAnalyzer
        run: |
          $_repo_dir = "{0}\shiftavenue-pswslmanage" -f $($env:RUNNER_WORKSPACE)
          $_issue_list=$null
          $_issue_list=@()
          echo $_repo_dir
          foreach($_issue in $(Invoke-ScriptAnalyzer -Path "$_repo_dir\pswslmanage.psm1")) {Write-Output "Add issue"; $_issue_list += $_issue}
          foreach($_issue in $(Invoke-ScriptAnalyzer -Path "$_repo_dir\pswslmanage-roles.ps1")) {Write-Output "Add issue"; $_issue_list += $_issue}
          foreach($_issue in $(Invoke-ScriptAnalyzer -Path "$_repo_dir\pswslmanage-helper.ps1")) {Write-Output "Add issue"; $_issue_list += $_issue}
          if($_issue_list.Count -gt 0) {$_issue_list; Write-Error "Linter issues found. Exiting"} 
        env:
          GH_WORKDIR: "testabc"

      - name: Publish
        run: |
          $_repo_dir = "{0}\shiftavenue-pswslmanage" -f $($env:RUNNER_WORKSPACE)
          $_user = "${{ github.actor }}"
          $_token = "${{ github.token }}" | ConvertTo-SecureString -AsPlainText -Force
          $_repo_owner = "${{ github.repository_owner }}"
          $_creds = New-Object System.Management.Automation.PSCredential -ArgumentList @($_user, $_token)
          $_feed = "https://nuget.pkg.github.com/$_repo_owner/index.json"
          $_module_name = "pswslmanage"
          $_repo_name = "PowershellNugetServices"
          
          echo "-----------------"
          echo "repo_dir:    $_repo_dir"
          echo "user:        $_user"
          echo "token:       $_token"
          echo "repo_owner:  $_repo_owner"
          echo "creds:       $_creds"
          echo "feeds:       $_feed"
          echo "module_name: $_module_name"
          echo "repo_name:   $_repo_name"
          echo "-----------------"

          ## Force TLS1.2
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          
          ## Register repository
          $_args = @{
              Name = $_repo_name
              SourceLocation = $_feed
              PublishLocation = $_feed
              InstallationPolicy = 'Trusted'
              Credential = $_creds
          }

          Unregister-PSRepository -Name $_repo_name
          Register-PSRepository @_args -
          
          Publish-Module -Path $_repo_dir `
            -Repository $_repo_name `
            -NuGetApiKey "${{ github.token }}"
  